{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGif.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","c","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGif","loading","state","setState","useEffect","then","console","table","GifGridItem","className","src","alt","GifGrid","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"sMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACE,sBAAMC,SATe,SAACC,GACtBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAc,SAAAS,GAAC,MAAK,CAAIP,GAAJ,mBAAmBO,OACvCN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAjBiB,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,aAqB3BZ,EAAYe,UAAY,CACtBd,cAAgBe,IAAUC,KAAKC,Y,mCC9BpBC,EAAM,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEdC,EAFc,0DAE4CC,UAAUH,GAFtD,sDAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATlB,kBAabM,GAba,4CAAH,sDCyBJO,EArBK,SAACf,GACnB,MAA0BlB,mBAAS,CACjCyB,KAAM,GACNS,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBAAU,WACRpB,EAAOC,GAAUoB,MACf,SAAAV,GACIW,QAAQC,MAAMZ,GACdQ,EAAS,CACPX,KAAMG,EACNM,SAAS,SAIhB,CAAChB,IAEGiB,GCpBIM,EAAc,SAAC,GAAuB,EAArBZ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IACvC,OACE,sBAAKsB,UAAU,2CAAf,UACE,4BAAKZ,IACL,qBAAKa,IAAMvB,EAAMwB,IAAMd,QCFhBe,EAAU,SAAC,GAAkB,IAAhB3B,EAAe,EAAfA,SAExB,EAAyBe,EAAYf,GAA7BO,EAAR,EAAQA,KAAMS,EAAd,EAAcA,QAEd,OACE,qCACA,6BAAMhB,IACJgB,GAAW,4CACb,qBAAKQ,UAAU,YAAf,SACIjB,EAAKE,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEMA,GADEA,EAAIC,aCWLiB,EAtBM,WAEnB,MAAoC9C,mBAAS,CAAC,UAA9C,mBAAO+C,EAAP,KAAmBhD,EAAnB,KAEA,OACE,qCACE,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBACA,6BAEIgD,EAAWpB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAWA,GADLA,Y,MCXpB8B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d9ad8f9d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleOnChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleOnSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories(c => c = [inputValue, ...c]);\r\n      setInputValue('');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleOnSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={inputValue}\r\n        onChange={handleOnChange} />\r\n    </ form>\r\n  )\r\n}\r\n\r\nAddCategory.prototype = {\r\n  setCategories : PropTypes.func.isRequired\r\n}\r\n","export const getGif = async ( category ) => {\r\n  //const url = `${ searchUrl }?q=${ category }&limit=10&api_key=${apiKey}`;\r\n  const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${ encodeURI(category) }&api_key=zwZGFmdPvQYGAu2QVKdK9hpdYy5Ni4N9`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n  const gifs = data.map(img => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n}","import { useState, useEffect }from 'react';\r\n\r\nimport { getGif } from \"../helpers/getGifs\";\r\n\r\nconst useFetchGif = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGif(category).then(\r\n      img => {\r\n          console.table(img);\r\n          setState({ \r\n            data: img, \r\n            loading: false\r\n          });\r\n      }\r\n    );\r\n  }, [category]);\r\n\r\n  return state;\r\n}\r\n\r\nexport default useFetchGif;\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card  animate__animated animate__flipInY\">\r\n      <p>{ title }</p>\r\n      <img src={ url } alt={ title } />\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport useFetchGif from '../hooks/useFetchGif';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n  const { data, loading} = useFetchGif(category);\r\n\r\n  return (\r\n    <>\r\n    <h3>{ category }</h3>\r\n    { loading && <p>Cargando...</p>}\r\n    <div className=\"card-grid\">\r\n      { data.map( img => \r\n        <GifGridItem \r\n          key={ img.id }\r\n          {...img}\r\n        />\r\n      )}\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n  const [categories, setCategories] = useState(['Anime']);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={ setCategories } />\r\n      <hr/>\r\n      <ul>\r\n        {\r\n          categories.map( category => \r\n            <GifGrid \r\n              key={ category }\r\n              category={ category } />\r\n          )\r\n        }\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}